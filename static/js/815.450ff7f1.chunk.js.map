{"version":3,"file":"static/js/815.450ff7f1.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","webpack://my-app/./src/components/common/FormControls/FormControls.module.css?7a3d","components/common/FormControls/FormControls.js","hoc/withAuthRedirect.js","utils/validators/validators.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__lB-pf\",\"posts\":\"MyPosts_posts__GSiZ2\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Yu4oG\",\"likesCount\":\"Post_likesCount__LXQiZ\"};","import s from \"./Post.module.css\";\n\nconst Post = (props) => {\n\n  return (\n    <div className={s.item}>\n      <img src=\"https://cdn.pixabay.com/photo/2013/07/13/10/07/man-156584_960_720.png\" alt={'author img'} />\n      {props.message}\n      <div>\n        <span className={s.likesCount} >{props.likesCount} like(s)</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport { reduxForm } from \"redux-form\";\nimport { maxLength, required } from \"../../../utils/validators/validators\";\nimport { createField, InputArea } from \"../../common/FormControls/FormControls\";\nimport s from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\n\nlet maxLength300 = maxLength(300)\n\nconst MyPosts = React.memo((props) => {\n  \n  let postsElements = props.posts.map(p => <Post className={s.post} message={p.message} likesCount={p.likesCount} key={p.id} /> );\n\n  let onSubmit = (formData) => {\n    props.sendPost(formData.newPostBody);  \n  };\n\n  return (\n    <div className={s.postsBlock}>\n      <h3>My Posts</h3>\n      <AddPostFormRedux  onSubmit={onSubmit} />\n      <div className={s.posts}>\n         { postsElements }\n      </div>\n    </div>\n  );\n});\n\nconst AddPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit} >\n\n      { createField('Write your message here..', 'newPostBody', [required, maxLength300], InputArea, {fieldType: 'textarea'}) }\n\n      <div>\n        <button >Add post</button>\n      </div>\n    </form>\n  )\n}\n\nconst AddPostFormRedux = reduxForm({ form: \"ProfileAddPostForm\" })(AddPostForm);\n\nexport default MyPosts;\n","import { connect } from \"react-redux\";\nimport {sendPost, updateNewPostText } from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\n\n\nlet mapStateToProps= (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  };\n}\n\nconst MyPostsContainer = connect(mapStateToProps, {updateNewPostText, sendPost}) (MyPosts);\n\nexport default MyPostsContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"image\":\"ProfileInfo_image__Kkyc5\",\"avatar\":\"ProfileInfo_avatar__1VFcV\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__XBXuJ\",\"aboutItem\":\"ProfileInfo_aboutItem__J2FXl\",\"aboutTitle\":\"ProfileInfo_aboutTitle__zMikE\",\"contactsBlock\":\"ProfileInfo_contactsBlock__cVFdA\",\"contactList\":\"ProfileInfo_contactList__7p7ua\",\"description\":\"ProfileInfo_description__u7GZ5\",\"fullName\":\"ProfileInfo_fullName__3fR7R\"};","import React, { useEffect, useState } from \"react\";\nimport s from \"./ProfileInfo.module.css\";\n\nconst ProfileStatusWithHooks = (props) => {\n    let [editMode,setEditMode] = useState(false)\n    let [status,setStatus] = useState(props.status)\n\n    useEffect(() => {\n        setStatus(props.status)\n    },[props.status])\n\n    const activateMode = () => {\n        setEditMode(true)\n    }\n\n    const deactivateMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n\n    const onStatusChange = (e) => {\n\n        setStatus(e.currentTarget.value)\n    }\n\n    return (\n    <div className={s.statusBlock}>\n      {editMode ? (\n        <div>\n          <input\n            autoFocus={true}\n            onBlur={ deactivateMode }\n            onChange={ onStatusChange }\n            type=\"text\"\n            value={status}\n          />\n        </div>\n      ) : (\n        <div>\n          <span onDoubleClick={ activateMode } >{status}</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatusWithHooks;\n","import Preloader from \"../../common/Preloader/Preloader\";\nimport defaultPhoto from \"../../../assets/images/user.jpg\";\nimport s from \"./ProfileInfo.module.css\";\nimport { NavLink } from \"react-router-dom\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\nconst ProfileInfo = ({profile, status, updateStatus }) => {\n  if (!profile) {\n    return <Preloader />;\n  }\n\n  let availableContacts = Object.keys(profile.contacts).filter((k) => { return profile.contacts[k]  })\n\n  return (\n    <div>\n      <div className={s.descriptionBlock}>\n        <div>\n          <img className={s.avatar} src={profile.photos.large != null ? profile.photos.large : defaultPhoto} alt={'Profile avatar'}/>\n        </div>\n\n        <NavLink to={`/dialogs/${profile.userId}`} className={s.startChat} >Send message</NavLink>\n        \n        <div className={s.description}>\n          <div className={s.aboutItem}>\n            <div className={s.fullName}>{profile.fullName}</div>\n          </div>\n          <div className={s.aboutItem}>\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus} / >\n          </div>\n          <div className={s.aboutItem}>\n            <span className={s.aboutTitle}>Обо мне: </span>\n            {profile.aboutMe ? profile.aboutMe : \"-\"}\n          </div>\n          <div className={s.aboutItem}>\n            <span className={s.aboutTitle}>Ищу работу:</span>\n            {profile.lookingForAJob ? \"да\" : \"нет\"}\n          </div>\n          <div className={s.aboutItem}>\n            <div className={s.aboutTitle}>Подробности:</div>\n            {profile.lookingForAJobDescription ? profile.lookingForAJobDescription : \"-\"}\n          </div>\n          {availableContacts.length > 0 && (\n              <div className={s.aboutItem}>\n                <div className={s.aboutTitle}>Контакты: </div>\n                <ul className={s.contactList}>\n                  {availableContacts.map(function (key) {\n\n                      return (\n                        <li key={key}>\n                          <span className={s.aboutTitle}>{key}:</span>\n                          <a href={`https://${profile.contacts[key]}`} target=\"_blank\" rel=\"noreferrer\" >\n                            {`https://${profile.contacts[key]}`}\n                          </a>\n                        </li>\n                      );\n                    \n                  })}\n                </ul>\n              </div>\n            )\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\n\n\nconst Profile = (props) => {\n  \n  return (\n    <div>\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} authData={props.authData}   />\n      <MyPostsContainer store={props.store} />\n    </div>\n  );\n};\n\nexport default Profile;\n","import Profile from \"./Profile\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getUserProfile,getStatus,updateStatus } from \"../../redux/profile-reducer\";\nimport { useParams,useLocation,useNavigate } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\n\n\n\n// wrapper to use react router's v6 hooks in class component(to use HOC pattern, like in router v5)\nfunction withRouter(Component) {\n  function ComponentWithRouterProp(props) {\n      let location = useLocation();\n      let navigate = useNavigate();\n      let params = useParams();\n      return (\n          <Component\n              {...props}\n              router={{ location, navigate, params }}\n          />\n      );\n  }\n\n  return ComponentWithRouterProp;\n}\n\nclass ProfileContainer extends React.Component {\n  componentDidMount = () => {\n    \n    let userId = null \n    if(this.props.router.params.userId) {\n      userId = this.props.router.params.userId\n    }\n\n    else if(this.props.auth.id) {\n      userId = this.props.auth.id\n    }\n    else {\n      this.props.router.navigate('/login')\n    }\n    \n    if(userId) {\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n     \n  }\n  componentDidUpdate(prevProps) {\n    \n    if (prevProps.auth.id !== this.props.auth.id || \n        prevProps.router.params.userId !== this.props.router.params.userId) {\n        \n      let userId = null;\n      if(this.props.router.params.userId) {\n        userId = this.props.router.params.userId\n      }\n      else if(this.props.auth.id) {\n        userId = this.props.auth.id\n      }\n\n      if(userId) {\n        this.props.getUserProfile(userId)\n        this.props.getStatus(userId)\n      }\n    }\n  }\n  \n  render () {\n    return (\n      <>\n      {\n        this.props.profile \n          ? <Profile profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\n          : <div>Нет данных для отображения</div>\n      }\n      </>\n    );\n  };\n}\n\nlet mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  auth: state.auth,\n});\n\nexport default compose(\n  connect(mapStateToProps, {getUserProfile,getStatus, updateStatus}),\n  withRouter,\n  withAuthRedirect,\n)(ProfileContainer)\n","// extracted by mini-css-extract-plugin\nexport default {\"checkboxControl\":\"FormControls_checkboxControl__33VzZ\",\"formControl\":\"FormControls_formControl__Bze--\",\"error\":\"FormControls_error__rGNdT\",\"errorText\":\"FormControls_errorText__5Si0-\",\"fieldWrap\":\"FormControls_fieldWrap__e7QgK\",\"labelWrap\":\"FormControls_labelWrap__nm-sq\"};","import { Field } from \"redux-form\";\nimport s from \"./FormControls.module.css\";\n\nexport const InputArea = ({ input, meta: {touched, error}, fieldType, ...props }) => {\n  const hasError = touched && error;\n\n  return (\n    <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\n      <div className={s.fieldWrap}>\n        {fieldType === \"input\" ? (\n          <input {...input} {...props} />\n        ) : (\n          <textarea {...input} {...props} />\n        )}\n      </div>\n      {props.label && (\n        <div className={s.labelWrap}>\n          <label for={props.id || \"\"}>{props.label}</label>\n        </div>\n      )}\n\n      {hasError ? (\n        <div className={s.errorText}>\n          <span>{error}</span>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport const createField = (\n  placeholder,\n  name,\n  validators,\n  component,\n  props\n) => {\n  let wrapClasses = props.wrapClasses || \"\";\n\n  if (props.type && props.type === \"checkbox\") {\n    wrapClasses += s.checkboxControl;\n  }\n\n  return (\n    <div className={wrapClasses}>\n      <Field\n        placeholder={placeholder}\n        name={name}\n        validate={validators}\n        component={component}\n        {...props}\n      />\n    </div>\n  );\n};\n","import { connect } from \"react-redux\"\nimport { Navigate } from \"react-router-dom\"\n\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect= (Component) => {\n\n\n    let RedirectComponent = (props) => {\n\n        // console.log(props)\n\n        if(!props.isAuth) return <Navigate to={'/login'} />\n\n        return <Component {...props} />\n    }\n    \n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedRedirectComponent\n}","export const required = (value) => {\n    console.log('required')\n    if(value && value !== '') {\n        return undefined\n    }\n\n    return 'It is required field!'\n}\n\nexport const maxLength = (maxLengthValue) => {\n    return (value) => {\n        if(value && value.length > maxLengthValue) {\n            return `You have exceeded the maximum message length(${maxLengthValue})`\n        }\n        \n        return undefined\n    }\n}"],"names":["props","className","s","src","alt","message","likesCount","maxLength300","maxLength","MyPosts","React","postsElements","posts","map","p","id","AddPostFormRedux","onSubmit","formData","sendPost","newPostBody","reduxForm","form","handleSubmit","createField","required","InputArea","fieldType","connect","state","profilePage","newPostText","updateNewPostText","useState","editMode","setEditMode","status","setStatus","useEffect","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","type","onDoubleClick","profile","Preloader","availableContacts","Object","keys","contacts","filter","k","photos","large","defaultPhoto","to","userId","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","length","key","href","target","rel","authData","store","ProfileContainer","componentDidMount","router","params","auth","navigate","getUserProfile","getStatus","prevProps","this","compose","Component","location","useLocation","useNavigate","useParams","withAuthRedirect","input","meta","touched","error","hasError","label","for","placeholder","name","validators","component","wrapClasses","Field","validate","mapStateToPropsForRedirect","isAuth","console","log","maxLengthValue"],"sourceRoot":""}