{"version":3,"file":"static/js/752.ec1593ac.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","webpack://my-app/./src/components/common/FormControls/FormControls.module.css?7a3d","components/common/FormControls/FormControls.js","hoc/withAuthRedirect.js","utils/validators/validators.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__lB-pf\",\"posts\":\"MyPosts_posts__GSiZ2\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Yu4oG\",\"likesCount\":\"Post_likesCount__LXQiZ\"};","import s from \"./Post.module.css\";\n\nconst Post = (props) => {\n\n  return (\n    <div className={s.item}>\n      <img src=\"https://cdn.pixabay.com/photo/2013/07/13/10/07/man-156584_960_720.png\" alt={'author img'} />\n      {props.message}\n      <div>\n        <span className={s.likesCount} >{props.likesCount} like(s)</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport { reduxForm } from \"redux-form\";\nimport { maxLength, required } from \"../../../utils/validators/validators\";\nimport { createField, InputArea } from \"../../common/FormControls/FormControls\";\nimport s from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\n\nlet maxLength300 = maxLength(300)\n\nconst MyPosts = React.memo((props) => {\n  \n  let postsElements = props.posts.map(p => <Post className={s.post} message={p.message} likesCount={p.likesCount} key={p.id} /> );\n\n  let onSubmit = (formData) => {\n    props.sendPost(formData.newPostBody);  \n  };\n\n  return (\n    <div className={s.postsBlock}>\n      <h3>My Posts</h3>\n      <AddPostFormRedux  onSubmit={onSubmit} />\n      <div className={s.posts}>\n         { postsElements }\n      </div>\n    </div>\n  );\n});\n\nconst AddPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit} >\n\n      { createField('Write your message here..', 'newPostBody', [required, maxLength300], InputArea, {fieldType: 'textarea'}) }\n\n      <div>\n        <button >Add post</button>\n      </div>\n    </form>\n  )\n}\n\nconst AddPostFormRedux = reduxForm({ form: \"ProfileAddPostForm\" })(AddPostForm);\n\nexport default MyPosts;\n","import { connect } from \"react-redux\";\nimport {sendPost, updateNewPostText } from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\n\n\nlet mapStateToProps= (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  };\n}\n\nconst MyPostsContainer = connect(mapStateToProps, {updateNewPostText, sendPost}) (MyPosts);\n\nexport default MyPostsContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"image\":\"ProfileInfo_image__Kkyc5\",\"avatar\":\"ProfileInfo_avatar__1VFcV\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__XBXuJ\",\"aboutItem\":\"ProfileInfo_aboutItem__J2FXl\",\"aboutTitle\":\"ProfileInfo_aboutTitle__zMikE\",\"contactsBlock\":\"ProfileInfo_contactsBlock__cVFdA\",\"contactList\":\"ProfileInfo_contactList__7p7ua\",\"description\":\"ProfileInfo_description__u7GZ5\",\"fullName\":\"ProfileInfo_fullName__3fR7R\",\"updateAvatarBtn\":\"ProfileInfo_updateAvatarBtn__PZG2t\",\"ownerImage\":\"ProfileInfo_ownerImage__bj3Hg\",\"startChatWrap\":\"ProfileInfo_startChatWrap__8wLSp\",\"profileDataForm\":\"ProfileInfo_profileDataForm__b+zKy\",\"form\":\"ProfileInfo_form__OSgA8\",\"fieldItem\":\"ProfileInfo_fieldItem__bAs7p\",\"editDataWrap\":\"ProfileInfo_editDataWrap__hRuvJ\",\"saveDataWrap\":\"ProfileInfo_saveDataWrap__ij-9O\",\"contactFieldWrap\":\"ProfileInfo_contactFieldWrap__-jneh\",\"errors\":\"ProfileInfo_errors__dIyFr\"};","import React, { useEffect, useState } from \"react\";\nimport s from \"./ProfileInfo.module.css\";\n\nconst ProfileStatusWithHooks = (props) => {\n    let [editMode,setEditMode] = useState(false)\n    let [status,setStatus] = useState(props.status)\n\n    useEffect(() => {\n        setStatus(props.status)\n    },[props.status])\n\n    const activateMode = () => {\n        setEditMode(true)\n    }\n\n    const deactivateMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n\n    const onStatusChange = (e) => {\n\n        setStatus(e.currentTarget.value)\n    }\n\n    return (\n    <div className={s.statusBlock}>\n      {editMode ? (\n        <div>\n          <input\n            autoFocus={true}\n            onBlur={ deactivateMode }\n            onChange={ onStatusChange }\n            type=\"text\"\n            value={status}\n          />\n        </div>\n      ) : (\n        <div>\n          <span onDoubleClick={ activateMode } >{status}</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatusWithHooks;\n","import { Field } from \"redux-form\";\nimport { reduxForm } from \"redux-form\";\nimport { createField, InputArea } from \"../../common/FormControls/FormControls\";\nimport s from \"./ProfileInfo.module.css\";\n\nexport const ProfileDataForm = (props) => {\n\n  let contacts = Object.keys(props.profile.contacts)\n  \n  return (\n    <form onSubmit={props.handleSubmit} className={`${s.form} ${s.profileDataForm}` }>\n      <div className={s.saveDataWrap}>\n        <button>Save</button>\n      </div>\n\n      {props.error && <div className={s.errors} > {props.error}</div>}\n\n      <div className={s.fieldItem}>\n      <Field name=\"fullName\" component=\"input\" type=\"text\" placeholder=\"Full Name\"/>\n      </div>\n\n      <div className={s.fieldItem}>\n        { createField('About me', 'aboutMe', [], InputArea, {type: 'text', fieldType: 'textarea', 'label': 'About me'}) }\n      </div>\n\n      <div className={s.fieldItem}>\n      { createField(null, \n                    'lookingForAJob', \n                    [], \n                    InputArea, \n                    {type: 'checkbox', fieldType: 'input', label: 'Looking for a job', 'id': 'lookingForAJob' } ) \n      }\n      </div>\n\n      <div className={s.fieldItem}>\n        { createField('Details', 'lookingForAJobDescription', [], InputArea, {type: 'text', fieldType: 'textarea', 'label': 'My professional skills'}) }\n      </div>\n      <div className={s.aboutItem}>\n        <div className={s.aboutTitle}>Contacts: </div>\n        <div className={s.contactList}>\n          {contacts.map(function (title) {\n              return (\n                <div className={s.contactFieldWrap} >\n                  {createField(title, \n                                 `contacts.${title}`, \n                                 [], \n                                 InputArea, \n                                 {type: 'text', fieldType: 'input', 'label': title}) \n                  }\n                </div>\n              )\n          })}\n        </div>\n      </div>\n      \n\n\n    </form>\n  );\n};\n\nconst ProfileDataReduxForm = reduxForm({ form: \"edit-profile\", enableReinitialize: true, destroyOnUnmount: false })(ProfileDataForm);\n\nexport default ProfileDataReduxForm;\n","import Preloader from \"../../common/Preloader/Preloader\";\nimport defaultPhoto from \"../../../assets/images/user.jpg\";\nimport s from \"./ProfileInfo.module.css\";\nimport { NavLink } from \"react-router-dom\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport React, { useState } from \"react\";\nimport ProfileDataForm from \"./ProfileDataForm\";\n\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\n\n  const inputFileRef = React.useRef(null)\n\n  let [editMode,setEditMode] = useState(false)\n\n  if (!profile) {\n    return <Preloader />;\n  }\n\n  const onMainPhotoClicked = () => {\n    inputFileRef.current.click()\n  }\n\n  const onMainPhotoSelected = (e) => {\n    if(e.target.files.length) {\n      savePhoto(e.target.files[0])\n    }\n  }\n  const activateEditMode = () => {\n    setEditMode(true)\n  }\n\n  const onSubmit = (formData) => {\n    saveProfile(formData).then(() => setEditMode(false) )\n  };\n\n  return (\n    <div>\n      <div className={s.descriptionBlock}>\n        <div>\n          <img className={s.avatar + (isOwner ? ` ${s.ownerImage}` : '') } \n               src={profile.photos.large != null ? profile.photos.large : defaultPhoto} \n               alt={'Profile avatar'}\n               title={isOwner ? 'Click for uploading' : ''} \n               onClick={onMainPhotoClicked} />\n          {isOwner && (\n              <input className={s.updateAvatarBtn} ref={inputFileRef} type={'file'} onChange={onMainPhotoSelected} />\n            )\n          }\n        </div>\n        \n        {!isOwner && (\n            <div className={s.startChatWrap}>\n              <NavLink to={`/dialogs/${profile.userId}`} >Send message</NavLink>\n            </div>\n          )\n        }\n\n        {editMode \n            ? <ProfileDataForm initialValues={profile}\n                               profile={profile}\n                               status={status} \n                               updateStatus={updateStatus} \n                               onSubmit={onSubmit} />\n            : <ProfileData profile={profile} \n                           status={status} \n                           isOwner={isOwner} \n                           updateStatus={updateStatus} \n                           activateEditMode={activateEditMode}  />\n        }\n\n\n      </div>\n    </div>\n  );\n};\n\n\nexport const Contact = ({contactTitle, contactValue}) => {\n  return (\n    <li>\n      <span className={s.aboutTitle}>{contactTitle}:</span>\n      <a href={`${contactValue}`} target=\"_blank\" rel=\"noreferrer\" >\n        {`${contactValue}`}\n      </a>\n    </li>\n  );\n}\n\nexport const ProfileData = ({profile, status, isOwner, updateStatus, activateEditMode}) => {\n\n  let availableContacts = Object.keys(profile.contacts).filter((k) => { return profile.contacts[k]  })\n\n  return (\n  <div className={s.description}>\n    {isOwner && (\n        <div className={s.editDataWrap}>\n          <button onClick={activateEditMode} >Edit</button>\n        </div>\n      )\n    }\n    <div className={s.aboutItem}>\n      <div className={s.fullName}>{profile.fullName}</div>\n    </div>\n    <div className={s.aboutItem}>\n      <ProfileStatusWithHooks status={status} updateStatus={updateStatus} / >\n    </div>\n    <div className={s.aboutItem}>\n      <span className={s.aboutTitle}>About me: </span>\n      {profile.aboutMe ? profile.aboutMe : \"-\"}\n    </div>\n    <div className={s.aboutItem}>\n      <span className={s.aboutTitle}>Looking for a job:</span>\n      {profile.lookingForAJob ? \"yes\" : \"no\"}\n    </div>\n    <div className={s.aboutItem}>\n      <div className={s.aboutTitle}>My professional skills:</div>\n      {profile.lookingForAJobDescription ? profile.lookingForAJobDescription : \"-\"}\n    </div>\n    {availableContacts.length > 0 && (\n        <div className={s.aboutItem}>\n          <div className={s.aboutTitle}>Контакты: </div>\n          <ul className={s.contactList}>\n            {availableContacts.map(function (title) {\n                return <Contact key={title} contactTitle={title} contactValue={profile.contacts[title]} />\n            })}\n          </ul>\n        </div>\n      )\n    }\n  </div>\n  )\n}\n\nexport default ProfileInfo;\n","import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\n\n\nconst Profile = (props) => {\n  \n  return (\n    <div>\n      <ProfileInfo isOwner={props.isOwner} \n                   profile={props.profile} \n                   status={props.status} \n                   updateStatus={props.updateStatus} \n                   savePhoto={props.savePhoto}\n                   saveProfile={props.saveProfile}   />\n      <MyPostsContainer store={props.store} />\n    </div>\n  );\n};\n\nexport default Profile;\n","import Profile from \"./Profile\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getUserProfile,getStatus,updateStatus,savePhoto,saveProfile } from \"../../redux/profile-reducer\";\nimport { useParams,useLocation,useNavigate } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\n\n\n\n// wrapper to use react router's v6 hooks in class component(to use HOC pattern, like in router v5)\nfunction withRouter(Component) {\n  function ComponentWithRouterProp(props) {\n      let location = useLocation();\n      let navigate = useNavigate();\n      let params = useParams();\n      return (\n          <Component\n              {...props}\n              router={{ location, navigate, params }}\n          />\n      );\n  }\n\n  return ComponentWithRouterProp;\n}\n\nclass ProfileContainer extends React.Component {\n\n  getProfileData = () => {\n    let userId = null \n    if(this.props.router.params.userId) {\n      userId = this.props.router.params.userId\n    }\n\n    else if(this.props.auth.id) {\n      userId = this.props.auth.id\n    }\n    else {\n      this.props.router.navigate('/login')\n    }\n    \n    if(userId) {\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n  }\n\n  componentDidMount = () => {\n    \n    this.getProfileData()\n  }\n  componentDidUpdate(prevProps) {\n    \n    if (prevProps.router.params.userId !== this.props.router.params.userId) {\n        \n      console.log([prevProps.router.params.userId, this.props.router.params.userId])  \n      this.getProfileData()\n    }\n  }\n  \n  render () {\n    return (\n      <>\n      {\n        this.props.profile \n          ? <Profile isOwner={!this.props.router.params.userId} \n                     profile={this.props.profile} \n                     status={this.props.status} \n                     updateStatus={this.props.updateStatus} \n                     savePhoto={this.props.savePhoto} \n                     saveProfile={this.props.saveProfile} \n                     />\n          : <div>Нет данных для отображения</div>\n      }\n      </>\n    );\n  };\n}\n\nlet mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  auth: state.auth,\n});\n\nexport default compose(\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\n  withRouter,\n  withAuthRedirect,\n)(ProfileContainer)\n","// extracted by mini-css-extract-plugin\nexport default {\"checkboxControl\":\"FormControls_checkboxControl__33VzZ\",\"formControl\":\"FormControls_formControl__Bze--\",\"error\":\"FormControls_error__rGNdT\",\"errorText\":\"FormControls_errorText__5Si0-\",\"fieldWrap\":\"FormControls_fieldWrap__e7QgK\",\"labelCheckboxWrap\":\"FormControls_labelCheckboxWrap__kXX0d\",\"labelTextWrap\":\"FormControls_labelTextWrap__nPV0n\"};","import { Field } from \"redux-form\";\nimport s from \"./FormControls.module.css\";\n\nexport const InputArea = ({ input, meta: {touched, error}, fieldType, ...props }) => {\n  const hasError = touched && error;\n\n  return (\n    <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\n      {props.label && props.type !== \"checkbox\" && (\n        <div className={`${s.labelTextWrap}`}>\n          <label htmlFor={props.id || \"\"}>{props.label}</label>\n        </div>\n      )}\n      \n      <div className={s.fieldWrap}>\n        {fieldType === \"input\" ? (\n          <input {...input} {...props} />\n        ) : (\n          <textarea {...input} {...props} />\n        )}\n      </div>\n      {props.label && props.type === \"checkbox\" && (\n        <div className={s.labelCheckboxWrap}>\n          <label htmlFor={props.id || \"\"}>{props.label}</label>\n        </div>\n      )}\n\n      {hasError ? (\n        <div className={s.errorText}>\n          <span>{error}</span>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport const createField = (\n  placeholder,\n  name,\n  validators,\n  component,\n  props\n) => {\n  let wrapClasses = props.wrapClasses || \"\";\n\n  if (props.type && props.type === \"checkbox\") {\n    wrapClasses += s.checkboxControl;\n  }\n\n  return (\n    <div className={wrapClasses}>\n      <Field\n        placeholder={placeholder}\n        name={name}\n        validate={validators}\n        component={component}\n        {...props}\n      />\n    </div>\n  );\n};\n","import { connect } from \"react-redux\"\nimport { Navigate } from \"react-router-dom\"\n\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect= (Component) => {\n\n\n    let RedirectComponent = (props) => {\n\n        // console.log(props)\n\n        if(!props.isAuth) return <Navigate to={'/login'} />\n\n        return <Component {...props} />\n    }\n    \n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedRedirectComponent\n}","export const required = (value) => {\n    console.log('required')\n    if(value && value !== '') {\n        return undefined\n    }\n\n    return 'It is required field!'\n}\n\nexport const maxLength = (maxLengthValue) => {\n    return (value) => {\n        if(value && value.length > maxLengthValue) {\n            return `You have exceeded the maximum message length(${maxLengthValue})`\n        }\n        \n        return undefined\n    }\n}"],"names":["props","className","s","src","alt","message","likesCount","maxLength300","maxLength","MyPosts","React","postsElements","posts","map","p","id","AddPostFormRedux","onSubmit","formData","sendPost","newPostBody","reduxForm","form","handleSubmit","createField","required","InputArea","fieldType","connect","state","profilePage","newPostText","updateNewPostText","useState","editMode","setEditMode","status","setStatus","useEffect","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","type","onDoubleClick","enableReinitialize","destroyOnUnmount","contacts","Object","keys","profile","error","Field","name","component","placeholder","label","title","Contact","contactTitle","contactValue","href","target","rel","ProfileData","isOwner","activateEditMode","availableContacts","filter","k","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","length","savePhoto","saveProfile","inputFileRef","Preloader","photos","large","defaultPhoto","current","click","ref","files","to","userId","initialValues","then","store","ProfileContainer","getProfileData","router","params","auth","navigate","getUserProfile","getStatus","componentDidMount","prevProps","this","console","log","compose","Component","location","useLocation","useNavigate","useParams","withAuthRedirect","input","meta","touched","hasError","htmlFor","validators","wrapClasses","validate","mapStateToPropsForRedirect","isAuth","maxLengthValue"],"sourceRoot":""}